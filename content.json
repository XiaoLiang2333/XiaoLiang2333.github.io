{"meta":{"title":"Dawnbeam‘s Cyberhome","subtitle":"这里是晓梁，我家有些...什么好康的都还没有","description":"在写了在写了","author":"Dawnbeam","url":"https://xiaoliang2333.github.io","root":"/"},"pages":[],"posts":[{"title":"","slug":"腾讯PCG QQ频道 二面","date":"2025-03-10T13:50:36.541Z","updated":"2025-03-04T15:32:57.023Z","comments":true,"path":"/post/腾讯PCG QQ频道 二面.html","link":"","permalink":"https://xiaoliang2333.github.io/post/%E8%85%BE%E8%AE%AFPCG%20QQ%E9%A2%91%E9%81%93%20%E4%BA%8C%E9%9D%A2.html","excerpt":"","text":"腾讯PCG QQ频道 二面 面试官自我介绍与业务介绍 自我介绍 说了一个自己发现的slice扩容异常的案例 两道笔试题： LRU LC.239 滑动窗口最大值 讲一个你觉得提升最大的项目，说一下遇到的挑战以及解决 pika是基于C++还是Go，pika-operator呢 讲项目难点 为什么会有BigKey？ bigkey熔断会不会对上游业务有影响？ 继续讲难点 你的启动顺序的保证和这个有什么关系 rocksdb数据结构 pika和redis相比有什么优势和劣势 有经过压测吗？跟redis对比 pika-operator是跟参考codis的吗？ 你们有对codis做优化吗 官方的codis没做，会有什么影响？redis没做，会有什么影响？ 你们为什么要选codis？为什么不选raft之类的 是operator来控制pika抢主的情况吗？ 像codis这种解决方案，有对应的operator吗 pika-operator实现与kubeblocks实现有什么本质上的区别吗 你觉得哪个更好？或者他们为什么这么选择？ 最开始做的时候kubeblocks还没有是吗 如果是现在你会选择哪种解决方案？ 我感觉当时你们是想先紧急做一个出来用出于这个目的的是吧 pika跟其他基于rocksdb做的存储优劣？ go string是否线程安全？ pika服务cpu经常cpu飙高，有什么排查思路？ 你们这个pika感觉属于自己玩的一个项目？比较老而且后面也有新的这种 哪些是你做的，哪些是你导师做的 AI这一块有什么理解吗 反问： 评价，建议？ 整体还可以，一些深挖的点可以了解一下，你做的项目算是比较深入，扩展出来的点没有很透彻，比如有问你rocksdb其实你不是很了解，后面那些发散的点可以去透彻的了解一下 技术栈？ go，框架：trpc-go，paas层用腾讯云，自己实现saas层逻辑 后面推进的话，大概流程？ 大概还有1-2轮技术面 end:会把今天面试结果给下一轮面试官，他会综合评定请耐心等待，估计要一周左右","categories":[],"tags":[]},{"title":"","slug":"腾讯PCG QQ后台 QQ频道一面","date":"2025-02-26T16:02:11.864Z","updated":"2025-02-26T16:02:12.352Z","comments":true,"path":"/post/腾讯PCG QQ后台 QQ频道一面.html","link":"","permalink":"https://xiaoliang2333.github.io/post/%E8%85%BE%E8%AE%AFPCG%20QQ%E5%90%8E%E5%8F%B0%20QQ%E9%A2%91%E9%81%93%E4%B8%80%E9%9D%A2.html","excerpt":"","text":"腾讯PCG QQ后台 QQ频道 你现在正在xx市吗？没在实习了是吧 我们这边是在深圳 你是可以接受的是吧 自我介绍 你不是计算机专业的？ 你是去年去实习的是吧，那时候应该还有一些很重要的课程 你平时都怎么了解现在的技术？比如说现在业内的一些落地方案 进程线程协程 操作系统要解决的核心问题是什么 操作系统具体的调度算法 平时用的操作系统，常用的linux命令 查看linux资源占用情况 查看linux网络连接情况 网络七层模型 TCP&#x2F;IP模型，网络接口层作用 TCP在哪一层？ 三握四挥，为什么不是2握4握 怎么理解TCP的可靠性 怎么保证TCP不丢失包 TCP拥塞控制 如果有很多网络节点，他的流量控制是怎么实现的 并发并行 MySQL索引类型 索引底层结构 MySQL的慢查询怎么排查，常见的解决方案 SQL注入 GORM怎么做数据查询 Redis你常用的数据结构 Redis缓存击穿 雪崩 穿透 Redis集群 我补充说的pika集群结构 Pika怎么做数据分片的 Pika数据查询过程 一个Key存储了很大的数据，怎么缓解压力 Pika持久化的过程 你搭过K8S的集群吗 你怎么理解docker docker用什么机制做资源隔离的 介绍实习 介绍用户满意度中心流程 你抓只读库的数据的结果是实时计算还是需要存储 你觉得Go和Python有什么区别 笔试：反转链表 Plus版 经典反转链表并输出 修改封装构造函数 反转两条链表（修改封装反转链表函数） 并发反转两条链表（goroutine) 修改依赖（一开始没太理解意思，其实就是用go func()闭包包一下） 反问： 对我的建议：挺好的，技术广度挺广的，还是有一些瑕疵，有些地方，比如说代码这里，以及深度上要挖掘，整体上觉得还挺好的 问业务：QQ频道 反反问：你之前的意向是在哪？我看好像是天美IEG ​ 1. 这个其实无所谓，除了北京都可以接受，因为老家是四川那边的所以对成都要接受一点 end:我们会去综合看一下，到时候有下一步的通知我们会联系你","categories":[],"tags":[]},{"title":"","slug":"shell -参数","date":"2024-09-19T14:03:19.989Z","updated":"2024-09-19T14:03:20.237Z","comments":true,"path":"/post/shell -参数.html","link":"","permalink":"https://xiaoliang2333.github.io/post/shell%20-%E5%8F%82%E6%95%B0.html","excerpt":"","text":"shell -参数1234567891011121314151617181920212223242526272829303132333435363738`/bin/sh` 是 Unix 系统上的一个命令行解释器（Shell）。在使用 `/bin/sh` 时，可以传递各种参数，这些参数可以改变其执行行为和模式。### 参数 -ec 的含义：- `-e`：当这个选项被启用时，如果一个命令返回一个非零的退出状态，Shell 会退出。也就是说，它会使 Shell 在执行命令时，如果遇到任何错误，则立即停止执行后续命令。这对于编写脚本时确保脚本不会忽略错误是非常有用的。也即是说，启用了`-e`选项的Shell脚本会在任何命令失败后立即退出，不会继续执行接下来的命令。 - `-c`：这个选项告诉 Shell 从字符串中读取命令并执行。紧跟在 `-c` 后面的参数会被认为是要执行的命令字符串。因此，可以用它来直接执行某个命令而无需将其保存在单独的脚本文件中。例如：```sh/bin/sh -c &#x27;echo &quot;Hello, World!&quot;&#x27;```上面的命令中，`/bin/sh` 被用来启动一个新的 Shell，`-c` 选项指明接下来是一个命令字符串，命令字符串是 `echo &quot;Hello, World!&quot;`，然后这个命令会被执行。### 常见的其他参数：- `-i`：交互式模式。这个选项告诉 Shell 应该运行在交互模式下，提示用户输入命令。 - `-s`：从标准输入读取命令，而不是从文件或字符串读取。 - `-x`：此选项开启命令跟踪。执行脚本时，每一个命令会首先打印出来，然后再执行。这对于调试脚本非常有用。 - `-v`：类似于 `-x`，但它打印出每一个被读取的输入行。这对于调试脚本中的输入处理很有用。- `-u`：在替换一个未设置的变量时，发出错误信息，shell会立即退出。- `--`：终止选项处理。在 `--` 之后的所有内容都会被视为普通的参数，而不是选项。这在处理包含 `-` 或 `--` 的参数时非常有用。### 组合使用参数：这些参数可以组合使用，比如：```sh/bin/sh -exv myscript.sh```这里，Shell 会以启用 `-e`、`-x` 和 `-v` 选项的方式来执行 `myscript.sh`，即在遇到错误时停止执行并打印执行的每个命令及其输入。","categories":[],"tags":[]},{"title":"","slug":"上海必有回响智能科技有限公司-基础运维实习生-一面面经","date":"2024-08-15T11:03:14.175Z","updated":"2024-08-15T11:08:01.911Z","comments":true,"path":"/post/上海必有回响智能科技有限公司-基础运维实习生-一面面经.html","link":"","permalink":"https://xiaoliang2333.github.io/post/%E4%B8%8A%E6%B5%B7%E5%BF%85%E6%9C%89%E5%9B%9E%E5%93%8D%E6%99%BA%E8%83%BD%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8-%E5%9F%BA%E7%A1%80%E8%BF%90%E7%BB%B4%E5%AE%9E%E4%B9%A0%E7%94%9F-%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F.html","excerpt":"","text":"上海必有回响智能科技有限公司-基础运维实习生-一面面经和面试官聊的很开心（目前见到的面试官好像人都很友善）,没考算法，难度相比昨天骤降，问的问题也与简历相关性更高 拷打： 介绍 为什么想这么早实习 开源经历（这次问的比较深，甚至捉了个虫） K8S架构，组件 etcd选举，一致性，在K8S集群中的作用 K8S Resource limit K8S Service K8S存储（emptyDir,hostPath,PV,PVC,StorageClass,CSI） K8S网络（Flannel，Calico） POD调度（亲和 污点 容忍度，nodeSelector，scheduler） Prometheus 监控（问的好像是Counter和Gauge区别？我没太听清也不了解） 如何排查Linux宿主机CPU，GPU，内存过高问题 还有些问题忘了，录像不知道为什么突然退出。。。 反问： 贵司业务 表现如何，有哪些需要提升改进的地方 Update:打电话了，周五上午11.HR面","categories":[],"tags":[]},{"title":"","slug":"数字远光灯科技-SRE岗-一面凉经","date":"2024-08-14T07:46:09.125Z","updated":"2024-08-14T07:47:52.220Z","comments":true,"path":"/post/数字远光灯科技-SRE岗-一面凉经.html","link":"","permalink":"https://xiaoliang2333.github.io/post/%E6%95%B0%E5%AD%97%E8%BF%9C%E5%85%89%E7%81%AF%E7%A7%91%E6%8A%80-SRE%E5%B2%97-%E4%B8%80%E9%9D%A2%E5%87%89%E7%BB%8F.html","excerpt":"","text":"数字远光灯科技-SRE岗-一面凉经面试官同样人很好，拷打的很全面。反问环节被面试官评价为基础有待加强，可以肯定凉了 拷打： 介绍 项目经历 开源经历 K8S部署时的流程 监控 计网：IP，网关，子网掩码 etcd与zookeeper原理，差异 Linux文件系统 Redis数据结构，网络模型，线程模型，持久化方式，是否会OOM？ epoll B+树 KV数据库的优点 如果让你来设计一款KV数据库，你如何做 Raft协议，投票时可能会出现什么问题？投票有无顺序？ 这些web后端工具是怎么了解到的，有做过类似的项目？ Hertz有没有遇到过超时问题 还了解过其他数据库没有，关系型的 算法： 1234/**Q: 有一组字符串数组，需要将字母异位词组合起来，可以按任意顺序返回结果列表输入: strs = [&quot;eat&quot;, &quot;tea&quot;, &quot;tan&quot;, &quot;ate&quot;, &quot;nat&quot;, &quot;bat&quot;]输出: [ [&quot;bat&quot;], [&quot;nat&quot;,&quot;tan&quot;], [&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;] ]*/","categories":[],"tags":[]},{"title":"","slug":"面试经历-影石insta360-DevOps日常实习","date":"2024-08-13T10:02:38.007Z","updated":"2024-08-13T10:02:38.349Z","comments":true,"path":"/post/面试经历-影石insta360-DevOps日常实习.html","link":"","permalink":"https://xiaoliang2333.github.io/post/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86-%E5%BD%B1%E7%9F%B3insta360-DevOps%E6%97%A5%E5%B8%B8%E5%AE%9E%E4%B9%A0.html","excerpt":"","text":"面试经历-影石insta360-DevOps日常实习面试官人很和善，没考八股没考算法，但是开源经历和项目经历都没问，20分钟就把我处理完了，我直接被闪电战打懵 拷打： 自我介绍 GMP模型及原理 使用Goroutine并发写100之和 场景题：现有三个服务于K8S集群中，需要做这三个服务的点击量收集，并且根据点击量识别异常以及即时联系方式告警 容器 Dockerfile Pod三个概念的联系与区别 Rust Java Go这三者内存管理上的区别 Git冲突是怎么回事，怎么解决 Redis的持久化方式及优缺点 是否了解Web开发，前端后端都写？用过哪些后端工具？ 怎么理解DevOps 反问： 贵司DevOps业务有哪些？ 为什么没问项目和开源经历？ 觉得我还有哪些提升的？","categories":[],"tags":[]},{"title":"如何使用Hexo框架搭载并部署一个属于自己的静态博客网站","slug":"Build your personal Blog website","date":"2023-05-22T16:59:45.097Z","updated":"2023-05-24T15:32:09.053Z","comments":true,"path":"/post/Build your personal Blog website.html","link":"","permalink":"https://xiaoliang2333.github.io/post/Build%20your%20personal%20Blog%20website.html","excerpt":"","text":"提前准备： 一个github账号 安装并对git 有一点小了解 安装Node.js 学会使用bing自己解决问题 Quick Start安装Hexo使用Powershell&#x2F;git bash&#x2F;cmd ···输入： 1npm install -g hexo-cli 初始化Hexo安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 123hexo init &lt;folder&gt; cd &lt;folder&gt;npm install &lt;folder&gt;替换为你想要存储博客文件的文件夹名。 新建完成后，指定文件夹的目录如下： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 其中_config.yml文件是我们建站、部署博客需要经常用到的，其他文件的请详情参考Hexo官方文档 配置博客_config.yml文件中，有关于网站的配置条目如下： 1234567title: 你个人博客的标题subtitle: 你个人博客的子标题description: 你个人博客的简述keywords: 你个人博客的关键词author: 你的名字language: 语言timezone: 时区 简单配置完之后，我们就可以开始将博客部署到github上了。 部署博客 新建一个用于储存你博客网站源代码的仓库，仓库名必须为你的github名.github.io(建议设置为公开) 使用git bash输入命令cd &lt;folder&gt;进入到博客文件夹,输入命令npm install hexo-deployer-git --save安装 hexo-deployer-git 修改博客配置文件_config.yml,最下文deploy行：12345deploy: type: git repo: [repository url]刚刚新建的仓库地址 branch: [branch](通常为main) message: [message] (若没有repo、branch等行请自行添加) 执行 hexo clean &amp;&amp; hexo deploy，生成站点文件并推送至远程库。(如果遇到网络问题导致推送失败，请设置git代理，以clash为例，git bash中输入命令： git config --global https.proxy https://127.0.0.1:7890 &#x2F;&#x2F;7890为clash默认端口) 设置github pages：进入刚新建的仓库，-settings -Pages,将默认分支设置为_config.yml配置中的分支名称（通常是main）。稍等片刻，即可以通过你的github名.github.io&#96;访问你的个人博客了！ 以上，你便成功的在github上部署好了自己的个人博客网站，快去写你自己的第一篇博客吧！","categories":[],"tags":[]}],"categories":[],"tags":[]}